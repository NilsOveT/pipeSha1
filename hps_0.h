#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'snddOutCount', class 'altera_avalon_pio'
 * The macros are prefixed with 'SNDDOUTCOUNT_'.
 * The prefix is the slave descriptor.
 */
#define SNDDOUTCOUNT_COMPONENT_TYPE altera_avalon_pio
#define SNDDOUTCOUNT_COMPONENT_NAME snddOutCount
#define SNDDOUTCOUNT_BASE 0x0
#define SNDDOUTCOUNT_SPAN 32
#define SNDDOUTCOUNT_END 0x1f
#define SNDDOUTCOUNT_BIT_CLEARING_EDGE_REGISTER 0
#define SNDDOUTCOUNT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SNDDOUTCOUNT_CAPTURE 0
#define SNDDOUTCOUNT_DATA_WIDTH 4
#define SNDDOUTCOUNT_DO_TEST_BENCH_WIRING 0
#define SNDDOUTCOUNT_DRIVEN_SIM_VALUE 0
#define SNDDOUTCOUNT_EDGE_TYPE NONE
#define SNDDOUTCOUNT_FREQ 50000000
#define SNDDOUTCOUNT_HAS_IN 0
#define SNDDOUTCOUNT_HAS_OUT 1
#define SNDDOUTCOUNT_HAS_TRI 0
#define SNDDOUTCOUNT_IRQ_TYPE NONE
#define SNDDOUTCOUNT_RESET_VALUE 0

/*
 * Macros for device 'result', class 'altera_avalon_pio'
 * The macros are prefixed with 'RESULT_'.
 * The prefix is the slave descriptor.
 */
#define RESULT_COMPONENT_TYPE altera_avalon_pio
#define RESULT_COMPONENT_NAME result
#define RESULT_BASE 0x10
#define RESULT_SPAN 32
#define RESULT_END 0x2f
#define RESULT_BIT_CLEARING_EDGE_REGISTER 0
#define RESULT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define RESULT_CAPTURE 0
#define RESULT_DATA_WIDTH 32
#define RESULT_DO_TEST_BENCH_WIRING 0
#define RESULT_DRIVEN_SIM_VALUE 0
#define RESULT_EDGE_TYPE NONE
#define RESULT_FREQ 50000000
#define RESULT_HAS_IN 1
#define RESULT_HAS_OUT 0
#define RESULT_HAS_TRI 0
#define RESULT_IRQ_TYPE NONE
#define RESULT_RESET_VALUE 0

/*
 * Macros for device 'snddInCount', class 'altera_avalon_pio'
 * The macros are prefixed with 'SNDDINCOUNT_'.
 * The prefix is the slave descriptor.
 */
#define SNDDINCOUNT_COMPONENT_TYPE altera_avalon_pio
#define SNDDINCOUNT_COMPONENT_NAME snddInCount
#define SNDDINCOUNT_BASE 0x20
#define SNDDINCOUNT_SPAN 32
#define SNDDINCOUNT_END 0x3f
#define SNDDINCOUNT_BIT_CLEARING_EDGE_REGISTER 0
#define SNDDINCOUNT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SNDDINCOUNT_CAPTURE 0
#define SNDDINCOUNT_DATA_WIDTH 4
#define SNDDINCOUNT_DO_TEST_BENCH_WIRING 0
#define SNDDINCOUNT_DRIVEN_SIM_VALUE 0
#define SNDDINCOUNT_EDGE_TYPE NONE
#define SNDDINCOUNT_FREQ 50000000
#define SNDDINCOUNT_HAS_IN 1
#define SNDDINCOUNT_HAS_OUT 0
#define SNDDINCOUNT_HAS_TRI 0
#define SNDDINCOUNT_IRQ_TYPE NONE
#define SNDDINCOUNT_RESET_VALUE 0

/*
 * Macros for device 'hash0', class 'altera_avalon_pio'
 * The macros are prefixed with 'HASH0_'.
 * The prefix is the slave descriptor.
 */
#define HASH0_COMPONENT_TYPE altera_avalon_pio
#define HASH0_COMPONENT_NAME hash0
#define HASH0_BASE 0x30
#define HASH0_SPAN 32
#define HASH0_END 0x4f
#define HASH0_BIT_CLEARING_EDGE_REGISTER 0
#define HASH0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HASH0_CAPTURE 0
#define HASH0_DATA_WIDTH 32
#define HASH0_DO_TEST_BENCH_WIRING 0
#define HASH0_DRIVEN_SIM_VALUE 0
#define HASH0_EDGE_TYPE NONE
#define HASH0_FREQ 50000000
#define HASH0_HAS_IN 0
#define HASH0_HAS_OUT 1
#define HASH0_HAS_TRI 0
#define HASH0_IRQ_TYPE NONE
#define HASH0_RESET_VALUE 0


#endif /* _ALTERA_HPS_0_H_ */
